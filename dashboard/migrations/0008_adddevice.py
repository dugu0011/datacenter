# Generated by Django 3.2.5 on 2021-07-07 15:37

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0007_adddatacenterrackcabinet_patch'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Device_Asset_Tag', models.CharField(blank=True, max_length=50)),
                ('Device_Description', models.CharField(blank=True, max_length=200)),
                ('Row_Location', models.CharField(blank=True, max_length=1)),
                ('Rack_Location', models.PositiveIntegerField(blank=True, default=1)),
                ('Unit_Location', models.PositiveIntegerField(blank=True, default=1)),
                ('network_device_category', models.CharField(blank=True, max_length=50)),
                ('network_sub_category', models.CharField(blank=True, max_length=50)),
                ('network_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('network_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('network_connection_type_fibre', models.CharField(blank=True, max_length=50)),
                ('network_connection_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('network_connection_type_both', models.CharField(blank=True, max_length=50)),
                ('security_device_category', models.CharField(blank=True, max_length=50)),
                ('security_number_of_ports_lan', models.IntegerField(blank=True, null=True)),
                ('security_network_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('security_connection_type_fibre', models.CharField(blank=True, max_length=50)),
                ('security_connection_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('security_connection_type_both', models.CharField(blank=True, max_length=50)),
                ('patch_position', models.CharField(blank=True, max_length=50)),
                ('patch_patch_type', models.CharField(blank=True, max_length=50)),
                ('path_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('ports_type_fibre', models.CharField(blank=True, max_length=50)),
                ('ports_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('ports_type_both', models.CharField(blank=True, max_length=50)),
                ('server_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('server_type_fibre', models.CharField(blank=True, max_length=50)),
                ('server_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('server_type_both', models.CharField(blank=True, max_length=50)),
                ('chassis_number_of_blades', models.IntegerField(blank=True, null=True)),
                ('chassis_total_blades_slots', models.IntegerField(blank=True, null=True)),
                ('chassis_type_fibre', models.CharField(blank=True, max_length=50)),
                ('chassis_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('chassis_type_both', models.CharField(blank=True, max_length=50)),
                ('load_number_of_ports', models.IntegerField(blank=True, null=True)),
                ('load_uplink_ports_wan', models.IntegerField(blank=True, null=True)),
                ('load_type_fibre', models.CharField(blank=True, max_length=50)),
                ('load_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('load_type_both', models.CharField(blank=True, max_length=50)),
                ('storage_number_of_controllers', models.IntegerField(blank=True, null=True)),
                ('storage_number_of_disks', models.IntegerField(blank=True, null=True)),
                ('storage_capacity', models.CharField(blank=True, max_length=50)),
                ('storage_type_fibre', models.CharField(blank=True, max_length=50)),
                ('storage_type_ehthernet', models.CharField(blank=True, max_length=50)),
                ('storage_type_both', models.CharField(blank=True, max_length=50)),
                ('tapelib_number_of_magazine', models.IntegerField(blank=True, null=True)),
                ('tapelib_number_io_station', models.IntegerField(blank=True, null=True)),
                ('tapelib_number_tape_capacity', models.IntegerField(blank=True, null=True)),
                ('tapelib_capacity', models.CharField(blank=True, max_length=50)),
                ('tapelib_storage_capacity', models.CharField(blank=True, max_length=50)),
                ('tapelib_space_occupied', models.CharField(blank=True, max_length=50)),
                ('pdu_category', models.CharField(blank=True, max_length=50)),
                ('pdu_number_of_power_ports', models.CharField(blank=True, max_length=50)),
                ('pdu_type', models.CharField(blank=True, max_length=50)),
                ('pdu_position', models.CharField(blank=True, max_length=50)),
                ('ups_max_loads', models.CharField(blank=True, max_length=50)),
                ('ups_number_of_power_ports', models.CharField(blank=True, max_length=50)),
                ('IP_Address_col1', models.PositiveIntegerField(blank=True, default=1)),
                ('IP_Address_col2', models.PositiveIntegerField(blank=True, default=1)),
                ('IP_Address_col3', models.PositiveIntegerField(blank=True, default=1)),
                ('Special_Notes', models.CharField(blank=True, max_length=200)),
            ],
        ),
    ]
